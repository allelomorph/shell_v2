.TH man 1 "12 Jan 2021" "2.0" "Cascara"

.SH NAME
Cascara / hsh - a simple command line interface built in C

.SH SYNOPSIS
Interactive Mode:
.B hsh
.I command
.R [args] ...
.bb
Non-Interactive Mode:
.B echo
.IR command or script
.R | hsh

.SH DESCRIPTION
.P
Cascara is a very simple shell program capable of running commands that can be found in the PATH.
.P
It takes user input from stdin. If the input is a valid command, the output of that command is then printed to stdout and any errors to stderr. If the user's input is not a valid command, then Cascara prints the appropriate error message to stdout.

.SS ADDITIONAL COMMANDS
.TP
.B
Ctrl + D
Exit the shell
.TP
.B
exit
Use the exit builtin to exit the shell
.TP
.B
env
Print all of the environmental variables

.SH EXIT STATUS
.TP
.B
0
Success

.TP
.B
-1
Failure; should stay internal

.TP
.B
127
Command not found

.SH ENVIRONMENT
.BR PATH - "used to locate the command provided by the user"
.BR PWD - "if the first element of PATH is blank, PWD is substituted"
.bb
All other environment variables are copied into an array at the beginning of the shell to facilitate manipulation in later versions. 

.SH BUGS
Not aware of any currently

.SH EXAMPLE

.SS Interactive Mode
.EX
Cascara $ ls -1a
.
..
AUTHORS
cascara.c
ETC_help.c
.git
holberton.h
hsh
loop_help.c
man_1_simple_shell
README.md
string_help.c
_which.c
Cascara $ exit
.EE

.SS Non-Interactive Mode
.EX
vagrant@vagrant-ubuntu-trusty-64:~/simple_shell$ echo "/bin/ls -fl" | ./hsh
total 80
-rw-rw-r--  1 vagrant vagrant  3269 Apr 17 02:34 cascara.c
-rw-rw-r--  1 vagrant vagrant   164 Apr 17 03:58 AUTHORS
-rw-rw-r--  1 vagrant vagrant  1279 Apr 17 14:30 man_1_simple_shell
-rw-rw-r--  1 vagrant vagrant  4942 Apr 17 02:37 loop_help.c
drwxrwxr-x  3 vagrant vagrant  4096 Apr 17 14:35 .
-rw-rw-r--  1 vagrant vagrant  1110 Apr 17 02:34 ETC_help.c
-rw-rw-r--  1 vagrant vagrant  2582 Apr 16 22:53 README.md
-rw-rw-r--  1 vagrant vagrant  1900 Apr 17 02:34 holberton.h
-rw-rw-r--  1 vagrant vagrant  2991 Apr 17 02:34 string_help.c
drwxr-xr-x 17 vagrant vagrant  4096 Apr 17 14:39 ..
drwxrwxr-x  8 vagrant vagrant  4096 Apr 17 14:34 .git
-rw-rw-r--  1 vagrant vagrant  4485 Apr 17 02:34 _which.c
-rwxrwxr-x  1 vagrant vagrant 18275 Apr 17 14:35 hsh
vagrant@vagrant-ubuntu-trusty-64:~/simple_shell$
.EE

.SH AUTHOR
v2.0 Samuel Pomeroy

.SH SEE ALSO
.I sh(1) bash(1)


     Cascara / hsh  command interpreter (simple shell)

.SH SYNOPSIS
.B hsh
[command_file]
.SH DESCRIPTION
.P
Cascara is a simple command line interpreter written in C, built to primarily emulate some basic functions of the dash shell (sh) pakcaged with Ubuntu 14.04 LTS, aka dash or the Debian Almquist Shell.
Some features from bash are also included.
.P
Overview
This simple shell is a REPL loop that reads lines from either a file or the terminal, interprets them, and execute any derived commands.
.P
Invocation
With no arguments and if the stdin is mapped to a terminal, the shell can be used as an interactive REPL loop.
A prompt will be given before every command, and errors will be returned for syntax violations, or directly from executables initiated by the shell.
.P
Alternately, if the calling shell redirects non-terminal input into the hsh shell or the first argument to hsh is present and is a shell script, the shell opens in non-interactive mode, and will interpret the input until EOF is reached.
.P
Lexical Structure
.P
The shell reads input in terms of lines from a file and breaks it up into words at whitespace (blanks and tabs), and at certain sequences of characters that are special to the shell called operators. There are two types of operators: control operators and input/output redirection operators (see below). 
.TP
Control operators:
&& || | ;
.TP
I/O redirection operators:
< > << >>
.P
Commands
.P
Once a line of raw input has been broken down lexically, if the remaining tokens contain the name of a builtin or some recognizable executable in the filesystem, they can be executed, but not before applying a few parameters if indicated by the included control or redirection operators.
.P
Redirections
.P
Redirections are used to change where a command reads its input or sends its output. In general, redirections open, close, or duplicate an existing reference to a file.
The overall format used for redirection is:
.P
(command [args] tokens) (redir operator) (file)
.P
Possible redirections include:
.TP
> file   Redirect standard output to file.
.TP
>> file  Append standard output to file.
.TP
< file   Redirect standard input from file.
.P
The last redirection is called a here-document or heredoc. All the text on successive lines up to the delimiter is saved away and made available to the command on standard input.
           << delimiter
                 here-doc-text ...
           delimiter
